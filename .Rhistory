usethis::use_mit_license()
usethis::use_testthat(3)
devtools::document()
usethis::use_vignette("mhp_intro")
set.seed(123)
monty_hall_sim(5, 100)
run_mhp_app()
styler::style_pkg()
lintr::lint_pkg()
set.seed(123)
monty_hall_sim(5, 100)
run_mhp_app()
lintr::lint_dir()
run_mhp_app()
lintr::lint_dir()
lintr::lint_dir()
lintr::lint_dir()
lintr::lint_dir()
# Document
devtools::document()
# Style
styler::style_pkg()
# Lint
lintr::lint_dir()
# Test
devtools::test()
# Run simulation
set.seed(123)
result <- monty_hall_sim(3, 10)
print(result)
# Run Shiny app
run_mhp_app()
run_mhp_app()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
\
devtools::document()
pkgdown::build_site()
devtools::document()
##### Execution
```R
##### Execution
```R
# Document
devtools::document()
# Style
styler::style_pkg()
# Lint
lintr::lint_dir()
# Test
devtools::test()
# Run simulation
set.seed(123)
result <- monty_hall_sim(3, 10)
print(result)
# Run Shiny app
run_mhp_app()
# Setup pkgdown
usethis::use_pkgdown()
# Setup pkgdown
usethis::use_pkgdown()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
styler::style_pkg()
lintr::lint_dir()
usethis::use_pkgdown()
pkgdown::build_site()
devtools::document()
styler::style_pkg()
lintr::lint_dir()
lintr::lint_dir()
usethis::use_pkgdown()
pkgdown::build_site()
devtools::document()
styler::style_pkg()
lintr::lint_dir()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
styler::style_pkg()
lintr::lint_dir()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
# Navigate to package directory (assuming setup from previous full example)
setwd("~/mhp_new10")
# Update _pkgdown.yml with the fix (manually edit or overwrite)
writeLines(c(
"url: https://esimms999.github.io/mhp",
"template:",
"  bootstrap: 5",
"home:",
"  sidebar:",
"    components:",
"      home:",
"        title: Home",
"        text: \"Overview of the mhp package\"",
"        href: index.html",
"      reference:",
"        title: Reference",
"        text: \"Function reference for mhp\"",
"        href: reference/index.html",
"      articles:",
"        title: Articles",
"        text: \"Articles and vignettes\"",
"        href: articles/index.html"
), "_pkgdown.yml")
# Rebuild site with the fix
pkgdown::build_site()
# Ensure _pkgdown.yml is correct
writeLines(c(
"url: https://esimms999.github.io/mhp",
"template:",
"  bootstrap: 5",
"home:",
"  sidebar:",
"    components:",
"      home:",
"        title: Home",
"        text: \"Overview of the mhp package\"",
"        href: index.html",
"      reference:",
"        title: Reference",
"        text: \"Function reference for mhp\"",
"        href: reference/index.html",
"      articles:",
"        title: Articles",
"        text: \"Articles and vignettes\"",
"        href: articles/index.html"
), "_pkgdown.yml")
# Ensure index.Rmd is in root directory
writeLines(c(
"---",
"title: \"mhp: Monty Hall Problem Simulator with Shiny\"",
"---",
"",
"```{r setup, include=FALSE}",
"knitr::opts_chunk$set(echo = FALSE)",
"```",
"",
"The `mhp` package provides a Shiny app and functions to simulate the Monty Hall problem with 3 or more doors.",
"",
"## Authors and Contributors",
"- **esimms999** (author, creator) <your.email@example.com>",
"- **GrokAI** (contributor) <grok@xai.com> - AI assistant from xAI"
), "index.Rmd")
# Rebuild site
pkgdown::build_site()
pkgdown::build_site()
# Update _pkgdown.yml
writeLines(c(
"url: https://esimms999.github.io/mhp",
"template:",
"  bootstrap: 5",
"home:",
"  sidebar:",
"    components:",
"      home:",
"        title: Home",
"        text: \"Overview of the mhp package\"",
"        href: index.html",
"      reference:",
"        title: Reference",
"        text: \"Function reference for mhp\"",
"        href: reference/index.html",
"      articles:",
"        title: Articles",
"        text: \"Articles and vignettes\"",
"        href: articles/index.html",
"development:",
"  authors: false"
), "_pkgdown.yml")
# Ensure index.Rmd is in root
writeLines(c(
"---",
"title: \"mhp: Monty Hall Problem Simulator with Shiny\"",
"---",
"",
"```{r setup, include=FALSE}",
"knitr::opts_chunk$set(echo = FALSE)",
"```",
"",
"The `mhp` package provides a Shiny app and functions to simulate the Monty Hall problem with 3 or more doors.",
"",
"## Authors and Contributors",
"- **esimms999** (author, creator) <your.email@example.com>",
"- **GrokAI** (contributor) <grok@xai.com> - AI assistant from xAI"
), "index.Rmd")
# Rebuild site
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
usethis::create_package(".")
getwd()
usethis::create_package(".")
usethis::create_package(".")
usethis::create_package(".")
usethis::create_package()
usethis::create_package(.)
usethis::create_package(".")
writeLines(c(
"Package: mhp",
"Title: Monty Hall Problem Simulator with Shiny",
"Version: 0.1.0",
"Authors@R: c(person(\"esimms999\", email = \"test@example.com\", role = c(\"aut\", \"cre\")), person(\"GrokAI\", email = \"grok@xai.com\", role = \"ctb\", comment = \"AI assistant from xAI\"))",
"Description: A Shiny app and functions to simulate the Monty Hall problem with 3 or more doors.",
"URL: https://esimms999.github.io/mhp",
"License: MIT + file LICENSE",
"Encoding: UTF-8",
"Depends: ",
"    R (>= 4.4.2),",
"    shiny,",
"    bslib",
"Suggests:",
"    testthat (>= 3.0.0),",
"    pkgdown,",
"    rmarkdown,",
"    roxygen2,",
"    styler,",
"    lintr"
), "DESCRIPTION")
writeLines(c(
"---",
"title: \"mhp: Monty Hall Problem Simulator with Shiny\"",
"---",
"",
"```{r setup, include=FALSE}",
"knitr::opts_chunk$set(echo = FALSE)",
"```",
"",
"The `mhp` package provides a Shiny app and functions to simulate the Monty Hall problem with 3 or more doors.",
"",
"## Authors and Contributors",
"- **esimms999** (author, creator) <test@example.com>",
"- **GrokAI** (contributor) <grok@xai.com> - AI assistant from xAI"
), "index.Rmd")
writeLines(c(
"url: https://esimms999.github.io/mhp",
"template:",
"  bootstrap: 5"
), "_pkgdown.yml")
usethis::use_pkgdown()
pkgdown::build_site()
writeLines(c(
"---",
"title: \"mhp: Monty Hall Problem Simulator with Shiny\"",
"---",
"",
"```{r setup, include=FALSE}",
"knitr::opts_chunk$set(echo = FALSE)",
"```",
"",
"The `mhp` package provides a Shiny app and functions to simulate the Monty Hall problem with 3 or more doors.",
"",
"## Authors and Contributors",
"- **esimms999** (author, creator) <test@example.com>",
"- **GrokAI** (contributor) <grok@xai.com> - AI assistant from xAI"
), "index.Rmd")
writeLines(c(
"url: https://esimms999.github.io/mhp",
"template:",
"  bootstrap: 5"
), "_pkgdown.yml")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
install.packages("ggplot2")
output$results_plot <- renderPlot({
results <- sim_results()
barplot(c(results$stick, results$switch),
names.arg = c("Stick", "Switch"),
col = c("red", "blue"),
ylim = c(0, 1),
main = paste("Monty Hall with", input$n_doors, "Doors"),
ylab = "Win Rate"
)
})
if (interactive()) run_mhp_app()
devtools::load_all(".")
@export
#' Run Monty Hall Shiny App
#'
#' Launches an interactive Shiny app for Monty Hall simulations.
#'
#' @return Launches a Shiny app.
#' @examples
#' if (interactive()) run_mhp_app()
#' @export
run_mhp_app <- function() {
ui <- bslib::page_sidebar(
title = "Monty Hall Simulator",
sidebar = bslib::sidebar(
numericInput("n_doors", "Number of Doors (>= 3):", value = 3, min = 3),
numericInput("n_sim", "Number of Simulations:", value = 1000, min = 1),
actionButton("run", "Run Simulation")
),
bslib::card(
plotOutput("results_plot"),
verbatimTextOutput("results_text")
)
)
server <- function(input, output, session) {
sim_results <- eventReactive(input$run, {
monty_hall_sim(input$n_doors, input$n_sim)
})
output$results_plot <- renderPlot({
results <- sim_results()
barplot(c(results$stick, results$switch),
names.arg = c("Stick", "Switch"),
col = c("red", "blue"),
ylim = c(0, 1),
main = paste("Monty Hall with", input$n_doors, "Doors"),
ylab = "Win Rate"
)
})
output$results_text <- renderPrint({
results <- sim_results()
cat("Sticking Win Rate:", round(results$stick, 3), "\n")
cat("Switching Win Rate:", round(results$switch, 3), "\n")
cat("Total:", round(results$stick + results$switch, 3))
})
}
shiny::shinyApp(ui, server)
}
run_mhp_app()
#' Run Monty Hall Shiny App
#'
#' Launches an interactive Shiny app for Monty Hall simulations.
#'
#' @return Launches a Shiny app.
#' @examples
#' if (interactive()) run_mhp_app()
#' @export
run_mhp_app <- function() {
ui <- bslib::page_sidebar(
title = "Monty Hall Simulator",
sidebar = bslib::sidebar(
numericInput("n_doors", "Number of Doors (>= 3):", value = 3, min = 3),
numericInput("n_sim", "Number of Simulations:", value = 1000, min = 1),
actionButton("run", "Run Simulation")
),
bslib::card(
plotOutput("results_plot"),
verbatimTextOutput("results_text")
)
)
server <- function(input, output, session) {
sim_results <- eventReactive(input$run, {
monty_hall_sim(input$n_doors, input$n_sim)
})
output$results_plot <- renderPlot({
results <- sim_results()
barplot(c(results$stick, results$switch),
names.arg = c("Stick", "Switch"),
col = c("red", "blue"),
ylim = c(0, 1),
main = paste("Monty Hall with", input$n_doors, "Doors"),
ylab = "Win Rate"
)
})
output$results_text <- renderPrint({
results <- sim_results()
cat("Sticking Win Rate:", round(results$stick, 3), "\n")
cat("Switching Win Rate:", round(results$switch, 3), "\n")
cat("Total:", round(results$stick + results$switch, 3))
})
}
shiny::shinyApp(ui, server)
}
run_mhp_app()
